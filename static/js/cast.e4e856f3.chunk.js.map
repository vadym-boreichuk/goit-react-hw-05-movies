{"version":3,"file":"static/js/cast.e4e856f3.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,GAAH,qJASJC,EAAOD,EAAAA,GAAAA,GAAH,gTAeJE,EAAQF,EAAAA,GAAAA,IAAH,yGAOLG,EAAOH,EAAAA,GAAAA,EAAH,qHAQJI,EAAYJ,EAAAA,GAAAA,EAAH,uH,SCpCTK,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACKC,EAAAA,EAAAA,IAAaH,GACrBI,MAAK,SAAAC,GAAG,OAAIN,EAAQM,EAAIC,KAAKR,KAArB,GACd,GAAE,CAACE,IAUJ,OACE,SAACV,EAAD,UACGQ,EAAKS,KACJ,gBAXaC,EAWVC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,cAAeC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,UAApD,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,KAdON,EAcSE,EAbN,OAAhBF,QAAwCO,IAAhBP,EACnB,+EAGH,sCAAN,OAA6CA,IAUnCQ,IAAKL,EACLM,MAAM,MACNC,GAAIL,EACJM,QAAQ,UAEV,SAACzB,EAAD,UAAOiB,KACP,UAAChB,EAAD,yBAAuBiB,OATdH,EADb,KAgBP,C,kMCvCKW,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACOH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADP,cACVC,EADU,OAMVC,EADMD,EACInB,KANA,kBAOToB,EAAIC,SAPK,2CAAH,qDAUTC,EAAe,mCAAG,WAAMV,GAAN,uFACHG,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaJ,EADb,oBAC2BE,IAFxB,cAChBS,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAe,mCAAG,WAAMZ,GAAN,uFACHG,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaJ,EADb,YACmBI,EADnB,oBACsDF,IAFnD,cAChBS,EADgB,yBAKfA,GALe,2CAAH,sDAQf1B,EAAY,mCAAG,WAAMe,GAAN,uFACAG,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaJ,EADb,YACmBI,EADnB,oBACsDF,IAFtD,cACbS,EADa,yBAKZA,GALY,2CAAH,sDAQZE,EAAc,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EY,IAF7E,cACfH,EADe,yBAKdA,GALc,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  border-radius: 15px;\n\n  &:hover {\n    background: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.5) 0%,\n      rgba(255, 60, 172, 0.5) 15%,\n      rgba(120, 75, 160, 0.5) 35%,\n      rgba(43, 134, 197, 0.5) 45%,\n      rgba(255, 255, 255, 0.2) 90%\n    );\n  }\n`;\n\nexport const Image = styled.img`\n  width: 340px;\n  height: 360px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n\nexport const Name = styled.p`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: #000;\n  margin: 10px 0;\n  width: 25%;\n`;\n\nexport const Character = styled.p`\n  font-size: 1rem;\n  font-weight: 400;\n  color: #000;\n  margin: 10px 0;\n  max-width: 50%;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/movies-api';\nimport { Character, Image, Item, List, Name } from './Cast.styled';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const cast = getMovieCast(movieId);\n    cast.then(res => setCast(res.data.cast));\n  }, [movieId]);\n\n  const setPosters = poster_path => {\n    if (poster_path === null || poster_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${poster_path}`;\n  };\n\n  return (\n    <List>\n      {cast.map(\n        ({ cast_id, profile_path, original_name, character, credit_id }) => (\n          <Item key={cast_id}>\n            <Image\n              src={setPosters(profile_path)}\n              alt={original_name}\n              width=\"336\"\n              id={credit_id}\n              loading=\"lazy\"\n            />\n            <Name>{original_name}</Name>\n            <Character>Character: {character}</Character>\n          </Item>\n        )\n      )}\n    </List>\n  );\n};\n\nexport { Cast as default } from './Cast';\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["List","styled","Item","Image","Name","Character","Cast","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","res","data","map","poster_path","cast_id","profile_path","original_name","character","credit_id","src","undefined","alt","width","id","loading","API_KEY","axios","END_POINTS","getMovies","page","response","obj","results","getMovieDetails","resp","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}