{"version":3,"file":"static/js/movie-details-page.7dd5043a.chunk.js","mappings":"sMAwFA,UAlFqB,WAAO,IAAD,MACzB,GAAsCA,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACMC,EAAAA,EAAAA,IAAgBH,GACxBI,MAAK,SAAAC,GACT,OAAON,EAAeM,EAAOC,KAC9B,GACF,GAAE,CAACN,IAEJ,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAUrDC,EAAU,OAAGf,QAAH,IAAGA,GAAH,UAAGA,EAAagB,cAAhB,aAAG,EAAqBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAGpEC,EAQErB,EARFqB,GACAC,EAOEtB,EAPFsB,cACAC,EAMEvB,EANFuB,eACAC,EAKExB,EALFwB,SACAC,EAIEzB,EAJFyB,YACAC,EAGE1B,EAHF0B,aACAC,EAEE3B,EAFF2B,aACAC,EACE5B,EADF4B,WAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIlB,EAAoBmB,QAA9B,sBACA,0BACGP,EACAI,IAAgB,iCAASA,EAAaI,MAAM,EAAG,GAA/B,UAGlBH,EAAa,GACZ,0CACeI,KAAKC,MAAqB,GAAfP,GAD1B,WAEE,gCACIE,EADJ,IACgC,IAAfA,EAAmB,OAAS,QAD7C,UAKF,gBAEF,gBACEM,IAxCa,SAAAT,GACjB,OAAoB,OAAhBA,QAAwCU,IAAhBV,EACnB,+EAGH,sCAAN,OAA6CA,EAC9C,CAkCUW,CAAWX,GAChBY,IAAI,cACJC,MAAOhB,GAAiBC,EACxBgB,MAAM,MACNlB,GAAIA,KAGN,sCACA,uBAAIG,KACJ,mDACA,oCACA,yBAAK,wBAAKT,OAEV,2BACE,yBACE,SAAC,KAAD,CAAMc,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,8LCpFKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACOH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADP,cACVC,EADU,OAMVC,EADMD,EACIvC,KANA,kBAOTwC,EAAIC,SAPK,2CAAH,qDAUT5C,EAAe,mCAAG,WAAMgB,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACavB,EADb,oBAC2BqB,IAFxB,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAe,mCAAG,WAAM9B,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACavB,EADb,YACmBuB,EADnB,oBACsDF,IAFnD,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQfE,EAAY,mCAAG,WAAM/B,GAAN,uFACAsB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACavB,EADb,YACmBuB,EADnB,oBACsDF,IAFtD,cACbQ,EADa,yBAKZA,GALY,2CAAH,sDAQZG,EAAc,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EY,IAF7E,cACfJ,EADe,yBAKdA,GALc,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Link, useParams, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/movies-api';\nimport { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [detailFilms, setDetailFilms] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movie = getMovieDetails(movieId);\n    movie.then(result => {\n      return setDetailFilms(result.data);\n    });\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const setPosters = poster_path => {\n    if (poster_path === null || poster_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${poster_path}`;\n  };\n\n  const genresList = detailFilms?.genres?.map(genre => genre.name).join(', ');\n\n  const {\n    id,\n    original_name,\n    original_title,\n    overview,\n    poster_path,\n    vote_average,\n    release_date,\n    vote_count,\n  } = detailFilms;\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h1>\n        {original_title}\n        {release_date && <span> ({release_date.slice(0, 4)})</span>}\n      </h1>\n\n      {vote_count > 1 ? (\n        <div>\n          User score: {Math.round(vote_average * 10)}%&ensp;\n          <span>\n            ({vote_count} {vote_count === 1 ? 'vote' : 'votes'})\n          </span>\n        </div>\n      ) : (\n        'No votes yet'\n      )}\n      <img\n        src={setPosters(poster_path)}\n        alt=\"Poster film\"\n        title={original_name || original_title}\n        width=\"336\"\n        id={id}\n      />\n\n      <h2>Overwiev</h2>\n      <p>{overview}</p>\n      <p>Additional information</p>\n      <h3>Genres</h3>\n      <ul>{<li>{genresList}</li>}</ul>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["useState","detailFilms","setDetailFilms","movieId","useParams","useEffect","getMovieDetails","then","result","data","location","useLocation","backLinkLocationRef","useRef","state","from","genresList","genres","map","genre","name","join","id","original_name","original_title","overview","poster_path","vote_average","release_date","vote_count","to","current","slice","Math","round","src","undefined","setPosters","alt","title","width","Suspense","fallback","API_KEY","axios","END_POINTS","getMovies","page","response","obj","results","resp","getMovieReviews","getMovieCast","getMovieSearch","query"],"sourceRoot":""}