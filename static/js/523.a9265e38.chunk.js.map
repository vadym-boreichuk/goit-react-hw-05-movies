{"version":3,"file":"static/js/523.a9265e38.chunk.js","mappings":"6SAKaA,EAAUC,EAAAA,GAAAA,IAAH,qIASPC,EAAOD,EAAAA,GAAAA,GAAH,wFAMJE,EAAOF,EAAAA,GAAAA,GAAH,4WAOWG,GAafC,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8kBAcA,SAAAM,GAAK,OACvBA,EAAMC,MAAN,+CAC4CD,EAAMC,MADlD,oBAEWC,EAFX,IADuB,G,8GC7B/B,EAtBuB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAGhC,OAFAC,EAAAA,EAAAA,YAAU,WAAQ,GAAE,KAGlB,SAAC,KAAD,WACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GACfH,MAAOQ,EAHT,SAKGD,KANMD,EADD,OAcnB,E,UCaD,EAhCa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAb,EAAAA,EAAAA,YAAU,WAENa,GAAW,IAEXC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAP,GACLC,EAAS,kCACTO,QAAQC,IAAIT,EACb,IACAU,SAAQ,kBAAMP,GAAW,EAAjB,GAGd,GAAE,KAGD,iCACE,4CACCD,GAAW,aACXF,IAAS,yBAAMA,IACfZ,IAAU,SAAC,EAAD,CAAgBA,OAAQA,MAGxC,C,kMChCKuB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVT,EAAS,mCAAG,2GAAOU,EAAP,+BAAc,EAAd,SACOF,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BG,EAD7B,wCADP,cACVC,EADU,OAMVT,EADMS,EACIC,KANA,kBAOTV,EAAIW,SAPK,2CAAH,qDAUTC,EAAe,mCAAG,WAAM1B,GAAN,uFACHoB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACarB,EADb,oBAC2BmB,IAFxB,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAe,mCAAG,WAAM5B,GAAN,uFACHoB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACarB,EADb,YACmBqB,EADnB,oBACsDF,IAFnD,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQfE,EAAY,mCAAG,WAAM7B,GAAN,uFACAoB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACarB,EADb,YACmBqB,EADnB,oBACsDF,IAFtD,cACbQ,EADa,yBAKZA,GALY,2CAAH,sDAQZG,EAAc,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EY,IAF7E,cACfJ,EADe,yBAKdA,GALc,2CAAH,qD","sources":["components/TrandingMovies/TrendingMovies.styled.js","components/TrandingMovies/TrendingMovies.js","pages/Home/Home.js","services/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport filmTape from 'images/film-tape.png';\nimport defaultPoster from 'images/default_poster.jpg';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 30px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  padding: 5px 12px;\n  border-bottom: 1px solid transparent;\n  position: relative;\n\n  &::before {\n    content: '';\n    background-image: url(${filmTape});\n    background-size: cover;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    left: -25px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const LinkToDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #ff3cac;\n  }\n\n  @media screen and (min-width: 768px) {\n    &:hover::after,\n    &:focus::after {\n      content: '';\n      background-image: ${props =>\n        props.cover\n          ? `url('https://image.tmdb.org/t/p/w500/${props.cover}')`\n          : `url(${defaultPoster})`};\n\n      background-size: cover;\n      width: 160px;\n      height: 240px;\n      display: block;\n      border-radius: 4px;\n      border: 1px solid rgba(43, 134, 197);\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: absolute;\n      top: -140px;\n      left: 400px;\n      z-index: 1;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Item, LinkToDetails, List, Wrapper } from './TrendingMovies.styled';\n\nconst TrandingMovies = ({ movies, prevLocation }) => {\n  useEffect(() => {}, []);\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <LinkToDetails\n              to={`/movies/${id}`}\n              state={{ from: prevLocation }}\n              cover={poster_path}\n            >\n              {title}\n            </LinkToDetails>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default TrandingMovies;\n","import TrandingMovies from 'components/TrandingMovies/TrendingMovies';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n\n      getMovies()\n        .then(obj => {\n          setMovies(obj);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending Movies</h1>\n      {loading && '...loading'}\n      {error && <div>{error}</div>}\n      {movies && <TrandingMovies movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["Wrapper","styled","List","Item","filmTape","LinkToDetails","Link","props","cover","defaultPoster","movies","prevLocation","useEffect","map","id","title","poster_path","to","state","from","useState","setMovies","error","setError","loading","setLoading","getMovies","then","obj","catch","console","log","finally","API_KEY","axios","END_POINTS","page","response","data","results","getMovieDetails","resp","getMovieReviews","getMovieCast","getMovieSearch","query"],"sourceRoot":""}