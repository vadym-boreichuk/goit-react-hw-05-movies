{"version":3,"file":"static/js/rewiews.ff27ff41.chunk.js","mappings":"8LAiCA,UA7BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAWM,EAAIC,KAAKC,QACrB,GAEF,GAAE,CAACP,KAGF,+BACE,0BACsB,IAAnBF,EAAQU,SACP,qEAEDV,GACCA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACV,2BACE,oCAAYA,MACZ,uBAAID,MAFGD,EADC,QASrB,C,8LC7BKG,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACOH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADP,cACVC,EADU,OAMVC,EADMD,EACIZ,KANA,kBAOTa,EAAIZ,SAPK,2CAAH,qDAUTa,EAAe,mCAAG,WAAMV,GAAN,uFACHI,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaL,EADb,oBAC2BG,IAFxB,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQflB,EAAe,mCAAG,WAAMO,GAAN,uFACHI,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaL,EADb,YACmBK,EADnB,oBACsDF,IAFnD,cAChBQ,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAY,mCAAG,WAAMZ,GAAN,uFACAI,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaL,EADb,YACmBK,EADnB,oBACsDF,IAFtD,cACbQ,EADa,yBAKZA,GALY,2CAAH,sDAQZE,EAAc,mCAAG,WAAMC,GAAN,uFACFV,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EW,IAF7E,cACfH,EADe,yBAKdA,GALc,2CAAH,qD","sources":["components/Reviews.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/movies-api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setRewiews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(res => {\n      setRewiews(res.data.results);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.length === 0 && (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n        {reviews &&\n          reviews.map(({ id, content, author }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["useState","reviews","setRewiews","movieId","useParams","useEffect","getMovieReviews","then","res","data","results","length","map","id","content","author","API_KEY","axios","END_POINTS","getMovies","page","response","obj","getMovieDetails","resp","getMovieCast","getMovieSearch","query"],"sourceRoot":""}