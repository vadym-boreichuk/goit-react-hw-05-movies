{"version":3,"file":"static/js/cast.7b4c3d85.chunk.js","mappings":"8LA2CA,UAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACKC,EAAAA,EAAAA,IAAaH,GACrBI,MAAK,SAAAC,GAAG,OAAIN,EAAQM,EAAIC,KAAKR,KAArB,GACd,GAAE,CAACE,IAUJ,OACE,+BACE,wBACGF,EAAKS,KACJ,gBAZWC,EAYRC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,cAAeC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,UAApD,OACE,2BACE,gBACEC,KAfKN,EAeWE,EAdR,OAAhBF,QAAwCO,IAAhBP,EACnB,+EAGH,sCAAN,OAA6CA,IAWjCQ,IAAKL,EACLM,MAAM,MACNC,GAAIL,KAEN,uBAAIF,KACJ,uCAAeC,OARRH,EADX,OAgBT,C,8LCvCKU,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACOH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADP,cACVC,EADU,OAMVC,EADMD,EACIlB,KANA,kBAOTmB,EAAIC,SAPK,2CAAH,qDAUTC,EAAe,mCAAG,WAAMT,GAAN,uFACHE,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaH,EADb,oBAC2BC,IAFxB,cAChBS,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAe,mCAAG,WAAMX,GAAN,uFACHE,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaH,EADb,YACmBG,EADnB,oBACsDF,IAFnD,cAChBS,EADgB,yBAKfA,GALe,2CAAH,sDAQfzB,EAAY,mCAAG,WAAMe,GAAN,uFACAE,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaH,EADb,YACmBG,EADnB,oBACsDF,IAFtD,cACbS,EADa,yBAKZA,GALY,2CAAH,sDAQZE,EAAc,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EY,IAF7E,cACfH,EADe,yBAKdA,GALc,2CAAH,qD","sources":["components/Cast.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/movies-api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const cast = getMovieCast(movieId);\n    cast.then(res => setCast(res.data.cast));\n  }, [movieId]);\n\n  const setPosters = poster_path => {\n    if (poster_path === null || poster_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${poster_path}`;\n  };\n\n  return (\n    <>\n      <ul>\n        {cast.map(\n          ({ cast_id, profile_path, original_name, character, credit_id }) => (\n            <li key={cast_id}>\n              <img\n                src={setPosters(profile_path)}\n                alt={original_name}\n                width=\"336\"\n                id={credit_id}\n              />\n              <p>{original_name}</p>\n              <p>Character: {character}</p>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","res","data","map","poster_path","cast_id","profile_path","original_name","character","credit_id","src","undefined","alt","width","id","API_KEY","axios","END_POINTS","getMovies","page","response","obj","results","getMovieDetails","resp","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}