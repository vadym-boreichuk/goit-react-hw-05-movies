{"version":3,"file":"static/js/430.44020dd6.chunk.js","mappings":"4OA4BA,EAxBmB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACdC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAeP,GAAcQ,MAAK,SAAAC,GAChCJ,EAASI,EAASC,KAAKC,QACxB,GACF,GAAE,CAACX,KAGF,+BACE,wBACGI,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMhB,GAA1C,SACGa,KAFID,EADA,OAUlB,ECGD,EA1BkB,WAAO,IAAD,IACtB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOlB,EAAP,KAAqBmB,EAArB,KAMMC,EAAM,UAAGpB,EAAaqB,IAAI,gBAApB,QAAgC,GAC5C,OACE,iCACE,0BACE,6BACE,kBACEC,MAAK,UAAEtB,EAAaqB,IAAI,gBAAnB,QAA+B,GACpCE,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAC,GAAC,OAbKtB,EAaiBsB,EAAEC,OAAOL,WAXlDH,EAD6B,KAAVf,EAAe,CAAEA,MAAAA,GAAU,CAAC,GADvB,IAAAA,CAaL,KAEb,6CAGJ,SAAC,EAAD,CAAYJ,aAAcoB,MAG/B,ECVD,EAbe,WAAO,IAAD,IAEbQ,EAAY,qBADD1B,EAAAA,EAAAA,MACac,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iCACE,SAAC,KAAD,CAAMF,GAAIa,EAAV,sBACA,SAAC,KAAD,KACA,SAAC,EAAD,MAGL,C,8LCbKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,sBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGVC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACOH,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADP,cACVxB,EADU,OAMVyB,EADMzB,EACIC,KANA,kBAOTwB,EAAIvB,SAPK,2CAAH,qDAUTwB,EAAe,mCAAG,WAAMtB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACalB,EADb,oBAC2BgB,IAFxB,cAChBO,EADgB,yBAKfA,GALe,2CAAH,sDAQfC,EAAe,mCAAG,WAAMxB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACalB,EADb,YACmBkB,EADnB,oBACsDF,IAFnD,cAChBO,EADgB,yBAKfA,GALe,2CAAH,sDAQfE,EAAY,mCAAG,WAAMzB,GAAN,uFACAiB,EAAAA,EAAAA,IAAA,UACdC,EADc,YACalB,EADb,YACmBkB,EADnB,oBACsDF,IAFtD,cACbO,EADa,yBAKZA,GALY,2CAAH,sDAQZ7B,EAAc,mCAAG,WAAMH,GAAN,uFACF0B,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,4DAC+EzB,IAF7E,cACfgC,EADe,yBAKdA,GALc,2CAAH,qD","sources":["components/MovieList/MoviesList.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getMovieSearch } from 'services/movies-api';\n\nconst MoviesList = ({ searchParams }) => {\n  const location = useLocation();\n  const [query, setQuery] = useState([]);\n  useEffect(() => {\n    getMovieSearch(searchParams).then(response => {\n      setQuery(response.data.results);\n    });\n  }, [searchParams]);\n\n  return (\n    <>\n      <ul>\n        {query.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MovieList/MoviesList';\n\nconst SearchBox = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n  const params = searchParams.get('query') ?? '';\n  return (\n    <>\n      <div>\n        <form>\n          <input\n            value={searchParams.get('query') ?? ''}\n            type=\"text\"\n            name=\"query\"\n            onChange={e => updateQueryString(e.target.value)}\n          />\n          <button>search</button>\n        </form>\n      </div>\n      <MoviesList searchParams={params} />\n    </>\n  );\n};\n\nexport default SearchBox;\n","import { Link, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport SearchBox from '../../components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backLinkHref}>Go back</Link>\n      <Outlet />\n      <SearchBox />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '7212b11b8c935ff4fdea97b9eff4e2a4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/day',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nconst getMovies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  const res = response;\n  const obj = res.data;\n  return obj.results;\n};\n\nconst getMovieDetails = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieCast = async id => {\n  const resp = await axios.get(\n    `${END_POINTS.movieDetails}/${id}/${END_POINTS.movieCredits}?api_key=${API_KEY}`\n  );\n\n  return resp;\n};\n\nconst getMovieSearch = async query => {\n  const resp = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return resp;\n};\n\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n  getMovieSearch,\n};\n"],"names":["searchParams","location","useLocation","useState","query","setQuery","useEffect","getMovieSearch","then","response","data","results","map","id","title","to","state","from","useSearchParams","setSearchParams","params","get","value","type","name","onChange","e","target","backLinkHref","API_KEY","axios","END_POINTS","getMovies","page","obj","getMovieDetails","resp","getMovieReviews","getMovieCast"],"sourceRoot":""}